[{"C:\\Projects\\Joes_Stamps\\client\\src\\index.js":"1","C:\\Projects\\Joes_Stamps\\client\\src\\App.js":"2","C:\\Projects\\Joes_Stamps\\client\\src\\reportWebVitals.js":"3","C:\\Projects\\Joes_Stamps\\client\\src\\components\\layout\\Navbar.js":"4","C:\\Projects\\Joes_Stamps\\client\\src\\components\\layout\\Landing.js":"5","C:\\Projects\\Joes_Stamps\\client\\src\\components\\auth\\Register.js":"6","C:\\Projects\\Joes_Stamps\\client\\src\\components\\auth\\Login.js":"7","C:\\Projects\\Joes_Stamps\\client\\src\\store.js":"8","C:\\Projects\\Joes_Stamps\\client\\src\\reducers\\index.js":"9","C:\\Projects\\Joes_Stamps\\client\\src\\reducers\\alert.js":"10","C:\\Projects\\Joes_Stamps\\client\\src\\actions\\types.js":"11","C:\\Projects\\Joes_Stamps\\client\\src\\actions\\alert.js":"12","C:\\Projects\\Joes_Stamps\\client\\src\\components\\layout\\Alert.js":"13","C:\\Projects\\Joes_Stamps\\client\\src\\actions\\auth.js":"14","C:\\Projects\\Joes_Stamps\\client\\src\\reducers\\auth.js":"15","C:\\Projects\\Joes_Stamps\\client\\src\\utils\\setAuthToken.js":"16","C:\\Projects\\Joes_Stamps\\client\\src\\components\\dashboard\\Dashboard.js":"17","C:\\Projects\\Joes_Stamps\\client\\src\\components\\routing\\PrivateRoute.js":"18","C:\\Projects\\Joes_Stamps\\client\\src\\reducers\\profile.js":"19","C:\\Projects\\Joes_Stamps\\client\\src\\actions\\profile.js":"20","C:\\Projects\\Joes_Stamps\\client\\src\\components\\layout\\Spinner.js":"21","C:\\Projects\\Joes_Stamps\\client\\src\\components\\profile-forms\\CreateProfile.js":"22","C:\\Projects\\Joes_Stamps\\client\\src\\components\\dashboard\\DashboardActions.js":"23","C:\\Projects\\Joes_Stamps\\client\\src\\components\\profile-forms\\EditProfile.js":"24","C:\\Projects\\Joes_Stamps\\client\\src\\components\\collection\\EditCollection.js":"25","C:\\Projects\\Joes_Stamps\\client\\src\\components\\collection\\AddFDC.js":"26","C:\\Projects\\Joes_Stamps\\client\\src\\components\\collection\\EditFDC.js":"27","C:\\Projects\\Joes_Stamps\\client\\src\\actions\\fdc.js":"28","C:\\Projects\\Joes_Stamps\\client\\src\\reducers\\fdc.js":"29","C:\\Projects\\Joes_Stamps\\client\\src\\components\\collection\\Collection.js":"30","C:\\Projects\\Joes_Stamps\\client\\src\\components\\collection\\CollectionItem.js":"31"},{"size":478,"mtime":1609808928918,"results":"32","hashOfConfig":"33"},{"size":2442,"mtime":1614558871109,"results":"34","hashOfConfig":"33"},{"size":362,"mtime":1609723420287,"results":"35","hashOfConfig":"33"},{"size":1429,"mtime":1612735371824,"results":"36","hashOfConfig":"33"},{"size":1100,"mtime":1612735714939,"results":"37","hashOfConfig":"33"},{"size":2713,"mtime":1611527512489,"results":"38","hashOfConfig":"33"},{"size":1961,"mtime":1611527512446,"results":"39","hashOfConfig":"33"},{"size":399,"mtime":1610319649663,"results":"40","hashOfConfig":"33"},{"size":240,"mtime":1614549398546,"results":"41","hashOfConfig":"33"},{"size":406,"mtime":1610837500546,"results":"42","hashOfConfig":"33"},{"size":639,"mtime":1615254915871,"results":"43","hashOfConfig":"33"},{"size":353,"mtime":1610840129130,"results":"44","hashOfConfig":"33"},{"size":507,"mtime":1610838972360,"results":"45","hashOfConfig":"33"},{"size":2103,"mtime":1613525259367,"results":"46","hashOfConfig":"33"},{"size":1093,"mtime":1611529791286,"results":"47","hashOfConfig":"33"},{"size":253,"mtime":1611448025246,"results":"48","hashOfConfig":"33"},{"size":1580,"mtime":1615515080786,"results":"49","hashOfConfig":"33"},{"size":662,"mtime":1611531476719,"results":"50","hashOfConfig":"33"},{"size":801,"mtime":1615255395076,"results":"51","hashOfConfig":"33"},{"size":2492,"mtime":1615258390796,"results":"52","hashOfConfig":"33"},{"size":296,"mtime":1612736141578,"results":"53","hashOfConfig":"33"},{"size":1965,"mtime":1614044766550,"results":"54","hashOfConfig":"33"},{"size":458,"mtime":1614543136576,"results":"55","hashOfConfig":"33"},{"size":2484,"mtime":1614546854086,"results":"56","hashOfConfig":"33"},{"size":585,"mtime":1614546967509,"results":"57","hashOfConfig":"33"},{"size":5611,"mtime":1615256613862,"results":"58","hashOfConfig":"33"},{"size":5562,"mtime":1615255670305,"results":"59","hashOfConfig":"33"},{"size":1664,"mtime":1615255009906,"results":"60","hashOfConfig":"33"},{"size":723,"mtime":1614556796591,"results":"61","hashOfConfig":"33"},{"size":515,"mtime":1615516030930,"results":"62","hashOfConfig":"33"},{"size":377,"mtime":1614561658768,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"1towtsn",{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"66"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"66"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"66"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"66"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"66"},"C:\\Projects\\Joes_Stamps\\client\\src\\index.js",[],["132","133"],"C:\\Projects\\Joes_Stamps\\client\\src\\App.js",[],"C:\\Projects\\Joes_Stamps\\client\\src\\reportWebVitals.js",[],"C:\\Projects\\Joes_Stamps\\client\\src\\components\\layout\\Navbar.js",[],"C:\\Projects\\Joes_Stamps\\client\\src\\components\\layout\\Landing.js",[],"C:\\Projects\\Joes_Stamps\\client\\src\\components\\auth\\Register.js",[],"C:\\Projects\\Joes_Stamps\\client\\src\\components\\auth\\Login.js",["134"],"import React, { useState } from 'react';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { login } from '../../actions/auth';\r\n\r\nconst Login = ({ login, isAuthenticated }) => {\r\n  const [formData, setFormData] = useState({\r\n    email: '',\r\n    password: '',\r\n  });\r\n\r\n  const { email, password } = formData;\r\n\r\n  const onChange = (e) =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    login(email, password);\r\n  };\r\n\r\n  // Redirect if logged in\r\n  if (isAuthenticated) {\r\n    return <Redirect to='/dashboard' />;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <h1 className='large text-primary'>Sign In</h1>\r\n      <p className='lead'>\r\n        <i className='fas fa-user'></i> Sign Into Your Account\r\n      </p>\r\n      <form className='form' onSubmit={(e) => onSubmit(e)}>\r\n        <div className='form-group'>\r\n          <input\r\n            type='email'\r\n            placeholder='Email Address'\r\n            name='email'\r\n            value={email}\r\n            onChange={(e) => onChange(e)}\r\n            required\r\n          />\r\n        </div>\r\n        <div className='form-group'>\r\n          <input\r\n            type='password'\r\n            placeholder='Password'\r\n            name='password'\r\n            value={password}\r\n            onChange={(e) => onChange(e)}\r\n            minLength='6'\r\n          />\r\n        </div>\r\n\r\n        <input type='submit' className='btn btn-primary' value='Login' />\r\n      </form>\r\n      <p className='my-1'>\r\n        Don't have an account? <Link to='/register'>Sign Up</Link>\r\n      </p>\r\n    </>\r\n  );\r\n};\r\n\r\nLogin.propTypes = {\r\n  login: PropTypes.func.isRequired,\r\n  isAuthenticated: PropTypes.bool,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n});\r\nexport default connect(mapStateToProps, { login })(Login);\r\n","C:\\Projects\\Joes_Stamps\\client\\src\\store.js",[],"C:\\Projects\\Joes_Stamps\\client\\src\\reducers\\index.js",[],"C:\\Projects\\Joes_Stamps\\client\\src\\reducers\\alert.js",[],"C:\\Projects\\Joes_Stamps\\client\\src\\actions\\types.js",[],"C:\\Projects\\Joes_Stamps\\client\\src\\actions\\alert.js",[],"C:\\Projects\\Joes_Stamps\\client\\src\\components\\layout\\Alert.js",[],"C:\\Projects\\Joes_Stamps\\client\\src\\actions\\auth.js",[],"C:\\Projects\\Joes_Stamps\\client\\src\\reducers\\auth.js",[],"C:\\Projects\\Joes_Stamps\\client\\src\\utils\\setAuthToken.js",[],"C:\\Projects\\Joes_Stamps\\client\\src\\components\\dashboard\\Dashboard.js",[],"C:\\Projects\\Joes_Stamps\\client\\src\\components\\routing\\PrivateRoute.js",[],"C:\\Projects\\Joes_Stamps\\client\\src\\reducers\\profile.js",[],"C:\\Projects\\Joes_Stamps\\client\\src\\actions\\profile.js",[],"C:\\Projects\\Joes_Stamps\\client\\src\\components\\layout\\Spinner.js",[],"C:\\Projects\\Joes_Stamps\\client\\src\\components\\profile-forms\\CreateProfile.js",[],"C:\\Projects\\Joes_Stamps\\client\\src\\components\\dashboard\\DashboardActions.js",[],"C:\\Projects\\Joes_Stamps\\client\\src\\components\\profile-forms\\EditProfile.js",["135"],"import React, { useState, Fragment, useEffect } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { createProfile, getCurrentProfile } from '../../actions/profile';\r\n\r\nconst EditProfile = ({\r\n  profile: { profile, loading },\r\n  createProfile,\r\n  getCurrentProfile,\r\n  history,\r\n}) => {\r\n  const [formData, setFormData] = useState({\r\n    location: '',\r\n    bio: '',\r\n  });\r\n\r\n  useEffect(() => {\r\n    getCurrentProfile();\r\n\r\n    setFormData({\r\n      location: loading || !profile.location ? '' : profile.location,\r\n      bio: loading || !profile.bio ? '' : profile.bio,\r\n    });\r\n  }, [loading]);\r\n\r\n  const { location, bio } = formData;\r\n\r\n  const onChange = (e) =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    createProfile(formData, history, true);\r\n  };\r\n  return (\r\n    <Fragment>\r\n      <h1 className='large text-primary'>Create Your Profile</h1>\r\n      <p className='lead'>\r\n        <i className='fas fa-user'></i> Let's get some more information\r\n      </p>\r\n      <form className='form' onSubmit={(e) => onSubmit(e)}>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='Location'\r\n            name='location'\r\n            value={location}\r\n            onChange={(e) => onChange(e)}\r\n            required\r\n          />\r\n          <small className='form-text'>\r\n            City & state suggested (eg. New York, NY)\r\n          </small>\r\n        </div>\r\n        <div className='form-group'>\r\n          <textarea\r\n            placeholder='A short bio of yourself'\r\n            name='bio'\r\n            value={bio}\r\n            onChange={(e) => onChange(e)}\r\n          ></textarea>\r\n          <small className='form-text'>Tell us a little about yourself</small>\r\n        </div>\r\n        <input type='submit' className='btn btn-primary my-1' />\r\n        <Link className='btn btn-light my-1' to='/dashboard'>\r\n          Go Back\r\n        </Link>\r\n      </form>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nEditProfile.propTypes = {\r\n  createProfile: PropTypes.func.isRequired,\r\n  profile: PropTypes.object.isRequired,\r\n  getCurrentProfile: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  profile: state.profile,\r\n});\r\n\r\nexport default connect(mapStateToProps, { createProfile, getCurrentProfile })(\r\n  withRouter(EditProfile)\r\n);\r\n","C:\\Projects\\Joes_Stamps\\client\\src\\components\\collection\\EditCollection.js",[],"C:\\Projects\\Joes_Stamps\\client\\src\\components\\collection\\AddFDC.js",["136"],"import React, { Fragment, useEffect, useState } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { createFDC } from '../../actions/profile';\r\n\r\nconst AddFDC = ({ createFDC, history }) => {\r\n  const [formData, setFormData] = useState({\r\n    title: '',\r\n    scottNum: '',\r\n    collinsNum: '',\r\n    issueDate: '',\r\n    year: '',\r\n    location: '',\r\n    price: '',\r\n    value: '',\r\n    quantity: '',\r\n    group: '',\r\n    chachetmaker: '',\r\n    series: '',\r\n    denomination: '',\r\n    format: '',\r\n    variety: '',\r\n    partOfSet: false,\r\n    description: '',\r\n  });\r\n\r\n  // useEffect(() => {\r\n\r\n  //   setFormData({\r\n  //   title: title,\r\n  //   scottNum: scottNum,\r\n  //   collinsNum: collinsNum,\r\n  //   issueDate: issueDate,\r\n  //   year: year,\r\n  //   location: location,\r\n  //   price: price,\r\n  //   value: value,\r\n  //   quantity: quantity,\r\n  //   group: group,\r\n  //   chachetmaker: chachetmaker,\r\n  //   series: series,\r\n  //   denomination: denomination,\r\n  //   format: format,\r\n  //   variety: variety,\r\n  //   partOfSet: partOfSet,\r\n  //   description: description,\r\n  //   });\r\n  // }, []);\r\n\r\n  const {\r\n    title,\r\n    scottNum,\r\n    collinsNum,\r\n    issueDate,\r\n    year,\r\n    location,\r\n    price,\r\n    value,\r\n    quantity,\r\n    group,\r\n    chachetmaker,\r\n    series,\r\n    denomination,\r\n    format,\r\n    variety,\r\n    partOfSet,\r\n    description,\r\n  } = formData;\r\n\r\n  const onChange = (e) =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    createFDC(formData, history);\r\n    console.log('submit');\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <h1 className='large text-primary'>Add FDC</h1>\r\n      <form className='form' onSubmit={(e) => onSubmit(e)}>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='Title'\r\n            name='title'\r\n            value={title}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n          <input\r\n            type='text'\r\n            placeholder='Scott Number'\r\n            name='scottNum'\r\n            value={scottNum}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n          <input\r\n            type='text'\r\n            placeholder=\"Collin's Number\"\r\n            name='collinsNum'\r\n            value={collinsNum}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n          <input\r\n            type='date'\r\n            placeholder='Issue Date'\r\n            name='issueDate'\r\n            value={issueDate}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n          <input\r\n            type='text'\r\n            placeholder='Year'\r\n            name='year'\r\n            value={year}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n          <input\r\n            type='text'\r\n            placeholder='Location'\r\n            name='location'\r\n            value={location}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n          <input\r\n            type='text'\r\n            placeholder='Price'\r\n            name='price'\r\n            value={price}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n          <input\r\n            type='text'\r\n            placeholder='Value'\r\n            name='value'\r\n            value={value}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n          <input\r\n            type='text'\r\n            placeholder='Quantity'\r\n            name='quantity'\r\n            value={quantity}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n          <input\r\n            type='text'\r\n            placeholder='Group'\r\n            name='group'\r\n            value={group}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n          <input\r\n            type='text'\r\n            placeholder='Chachet Maker'\r\n            name='chachetmaker'\r\n            value={chachetmaker}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n          <input\r\n            type='text'\r\n            placeholder='Series'\r\n            name='series'\r\n            value={series}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n          <input\r\n            type='text'\r\n            placeholder='Denomination'\r\n            name='denomination'\r\n            value={denomination}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n          <input\r\n            type='text'\r\n            placeholder='Format'\r\n            name='format'\r\n            value={format}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n          <input\r\n            type='text'\r\n            placeholder='Variety'\r\n            name='variety'\r\n            value={variety}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n          <input\r\n            type='bool'\r\n            placeholder='Part of set?'\r\n            name='partOfSet'\r\n            value={partOfSet}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n        </div>\r\n        <div className='form-group'>\r\n          <textarea\r\n            placeholder='Description'\r\n            name='Description'\r\n            value={description}\r\n            onChange={(e) => onChange(e)}\r\n          ></textarea>\r\n        </div>\r\n        <input type='submit' className='btn btn-primary my-1' />\r\n        <Link className='btn btn-light my-1' to='/edit-collection'>\r\n          Go Back\r\n        </Link>\r\n      </form>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nAddFDC.propTypes = {\r\n  createFDC: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, { createFDC })(withRouter(AddFDC));\r\n","C:\\Projects\\Joes_Stamps\\client\\src\\components\\collection\\EditFDC.js",["137"],"import React, { Fragment, useEffect, useState } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { createFDC } from '../../actions/profile';\r\n\r\nconst AddFDC = ({ createFDC }) => {\r\n  const [formData, setFormData] = useState({\r\n    title: '',\r\n    scottNum: '',\r\n    collinsNum: '',\r\n    issueDate: '',\r\n    year: '',\r\n    location: '',\r\n    price: '',\r\n    value: '',\r\n    quantity: '',\r\n    group: '',\r\n    chachetmaker: '',\r\n    series: '',\r\n    denomination: '',\r\n    format: '',\r\n    variety: '',\r\n    partOfSet: false,\r\n    description: '',\r\n  });\r\n\r\n  useEffect(() => {\r\n    setFormData({\r\n      title: title,\r\n      scottNum: scottNum,\r\n      collinsNum: collinsNum,\r\n      issueDate: issueDate,\r\n      year: year,\r\n      location: location,\r\n      price: price,\r\n      value: value,\r\n      quantity: quantity,\r\n      group: group,\r\n      chachetmaker: chachetmaker,\r\n      series: series,\r\n      denomination: denomination,\r\n      format: format,\r\n      variety: variety,\r\n      partOfSet: partOfSet,\r\n      description: description,\r\n    });\r\n  }, []);\r\n\r\n  const {\r\n    title,\r\n    scottNum,\r\n    collinsNum,\r\n    issueDate,\r\n    year,\r\n    location,\r\n    price,\r\n    value,\r\n    quantity,\r\n    group,\r\n    chachetmaker,\r\n    series,\r\n    denomination,\r\n    format,\r\n    variety,\r\n    partOfSet,\r\n    description,\r\n  } = formData;\r\n\r\n  const onChange = (e) =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    createFDC(formData);\r\n    console.log('submit');\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <h1 className='large text-primary'>Add FDC</h1>\r\n      <form className='form' onSubmit={(e) => onSubmit(e)}>\r\n        <div className='form-group'>\r\n          <input\r\n            type='text'\r\n            placeholder='Title'\r\n            name='title'\r\n            value={title}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n          <input\r\n            type='text'\r\n            placeholder='Scott Number'\r\n            name='scottNum'\r\n            value={scottNum}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n          <input\r\n            type='text'\r\n            placeholder=\"Collin's Number\"\r\n            name='collinsNum'\r\n            value={collinsNum}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n          <input\r\n            type='date'\r\n            placeholder='Issue Date'\r\n            name='issueDate'\r\n            value={issueDate}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n          <input\r\n            type='text'\r\n            placeholder='Year'\r\n            name='year'\r\n            value={year}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n          <input\r\n            type='text'\r\n            placeholder='Location'\r\n            name='location'\r\n            value={location}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n          <input\r\n            type='text'\r\n            placeholder='Price'\r\n            name='price'\r\n            value={price}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n          <input\r\n            type='text'\r\n            placeholder='Value'\r\n            name='value'\r\n            value={value}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n          <input\r\n            type='text'\r\n            placeholder='Quantity'\r\n            name='quantity'\r\n            value={quantity}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n          <input\r\n            type='text'\r\n            placeholder='Group'\r\n            name='group'\r\n            value={group}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n          <input\r\n            type='text'\r\n            placeholder='Chachet Maker'\r\n            name='chachetmaker'\r\n            value={chachetmaker}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n          <input\r\n            type='text'\r\n            placeholder='Series'\r\n            name='series'\r\n            value={series}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n          <input\r\n            type='text'\r\n            placeholder='Denomination'\r\n            name='denomination'\r\n            value={denomination}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n          <input\r\n            type='text'\r\n            placeholder='Format'\r\n            name='format'\r\n            value={format}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n          <input\r\n            type='text'\r\n            placeholder='Variety'\r\n            name='variety'\r\n            value={variety}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n          <input\r\n            type='bool'\r\n            placeholder='Part of set?'\r\n            name='partOfSet'\r\n            value={partOfSet}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n        </div>\r\n        <div className='form-group'>\r\n          <textarea\r\n            placeholder='Description'\r\n            name='Description'\r\n            value={description}\r\n            onChange={(e) => onChange(e)}\r\n          ></textarea>\r\n        </div>\r\n        <input type='submit' className='btn btn-primary my-1' />\r\n        <Link className='btn btn-light my-1' to='/edit-collection'>\r\n          Go Back\r\n        </Link>\r\n      </form>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nAddFDC.propTypes = {\r\n  createFDC: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, { createFDC })(withRouter(AddFDC));\r\n","C:\\Projects\\Joes_Stamps\\client\\src\\actions\\fdc.js",["138"],"C:\\Projects\\Joes_Stamps\\client\\src\\reducers\\fdc.js",[],"C:\\Projects\\Joes_Stamps\\client\\src\\components\\collection\\Collection.js",["139","140"],"C:\\Projects\\Joes_Stamps\\client\\src\\components\\collection\\CollectionItem.js",["141"],"import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst CollectionItem = ({ firstDayCover: { scottNum, collinsNum, title } }) => {\r\n  return (\r\n    <div>\r\n      <h3>{title}</h3>\r\n    </div>\r\n  );\r\n};\r\n\r\nCollectionItem.propTypes = {\r\n  firstDayCover: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default CollectionItem;\r\n",{"ruleId":"142","replacedBy":"143"},{"ruleId":"144","replacedBy":"145"},{"ruleId":"146","severity":1,"message":"147","line":70,"column":7,"nodeType":"148","messageId":"149","endLine":70,"endColumn":22},{"ruleId":"150","severity":1,"message":"151","line":25,"column":6,"nodeType":"152","endLine":25,"endColumn":15,"suggestions":"153"},{"ruleId":"146","severity":1,"message":"154","line":1,"column":27,"nodeType":"148","messageId":"149","endLine":1,"endColumn":36},{"ruleId":"150","severity":1,"message":"155","line":48,"column":6,"nodeType":"152","endLine":48,"endColumn":8,"suggestions":"156"},{"ruleId":"146","severity":1,"message":"157","line":4,"column":22,"nodeType":"148","messageId":"149","endLine":4,"endColumn":30},{"ruleId":"146","severity":1,"message":"154","line":1,"column":27,"nodeType":"148","messageId":"149","endLine":1,"endColumn":36},{"ruleId":"146","severity":1,"message":"158","line":3,"column":10,"nodeType":"148","messageId":"149","endLine":3,"endColumn":17},{"ruleId":"146","severity":1,"message":"159","line":2,"column":10,"nodeType":"148","messageId":"149","endLine":2,"endColumn":14},"no-native-reassign",["160"],"no-negated-in-lhs",["161"],"no-unused-vars","'mapStateToProps' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getCurrentProfile', 'profile.bio', and 'profile.location'. Either include them or remove the dependency array. If 'getCurrentProfile' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["162"],"'useEffect' is defined but never used.","React Hook useEffect has missing dependencies: 'chachetmaker', 'collinsNum', 'denomination', 'description', 'format', 'group', 'issueDate', 'location', 'partOfSet', 'price', 'quantity', 'scottNum', 'series', 'title', 'value', 'variety', and 'year'. Either include them or remove the dependency array.",["163"],"'GET_FDCS' is defined but never used.","'connect' is defined but never used.","'Link' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"164","fix":"165"},{"desc":"166","fix":"167"},"Update the dependencies array to be: [getCurrentProfile, loading, profile.bio, profile.location]",{"range":"168","text":"169"},"Update the dependencies array to be: [chachetmaker, collinsNum, denomination, description, format, group, issueDate, location, partOfSet, price, quantity, scottNum, series, title, value, variety, year]",{"range":"170","text":"171"},[687,696],"[getCurrentProfile, loading, profile.bio, profile.location]",[1161,1163],"[chachetmaker, collinsNum, denomination, description, format, group, issueDate, location, partOfSet, price, quantity, scottNum, series, title, value, variety, year]"]